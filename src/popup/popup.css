@import url('/public/style/theme.css');

* {
    --border-color: color-mix(in hsl, var(--hn-plus-theme-primary) 25%, #ffffff);
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

:not(:is(h1, h2, h3, h4, h5, h6)) {
    font-size: inherit;
}

body {
    display: flex;
    flex-direction: column;
    font-family: 'Roboto', sans-serif;
    font-size: 12px;
    height: 40em;
    width: 33em;
}

a[role="dialog" i] {
    color: inherit;
    text-decoration: none;
}

a[role="dialog" i] .material-symbols-outlined {
    font-size: 1.667em;
    margin: 0 0 -0.1em;
    opacity: 0.75;
    vertical-align: text-bottom;
}

a[role="dialog" i]:hover .material-symbols-outlined {
    opacity: 1;
}

button {
    align-items: center;
    background: color-mix(in hsl, var(--hn-plus-theme-primary) 90%, #ffffff);
    border: none;
    border-radius: 0.3em;
    color: #ffffff;
    cursor: pointer;
    display: inline-flex;
    gap: 0.3em;
    padding: 0.5em 1em;
}

button:is(:hover, :focus) {
    background: color-mix(in hsl, var(--hn-plus-theme-primary) 87%, #ffffff);
}

button:active {
    background: color-mix(in hsl, var(--hn-plus-theme-primary) 93%, #ffffff);
}

input,
select {
    border: thin solid var(--border-color);
    border-radius: 0.3em;
    padding: 0.5em;
}

input {
    padding: 0.584em;
}

input[type="number" i]::-webkit-outer-spin-button,
input[type="number" i]::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
}

input[type="number" i] {
    -moz-appearance: textfield;
    appearance: textfield;
}

input:is([type="checkbox" i], [type="radio" i])[role="toggle" i] {
    --transition-speed: 400ms;
    align-items: center;
    appearance: none;
    aspect-ratio: 2 / 1;
    background-color: color-mix(in hsl, var(--hn-plus-theme-primary) 25%, #ffffff);
    border-radius: 2em;
    color: #ffffff;
    cursor: pointer;
    display: inline-flex;
    height: 2.5em;
    padding: 4px;
    transition: var(--transition-speed) ease;
}

input:is([type="checkbox" i], [type="radio" i])[role="toggle" i]:before {
    aspect-ratio: 1 / 1;
    background-color: currentColor;
    border-radius: 50%;
    content: "";
    height: 100%;
    left: 0;
    position: relative;
    transition: var(--transition-speed) ease;
}

input:is([type="checkbox" i], [type="radio" i])[role="toggle" i]:checked {
    background-color: var(--hn-plus-theme-secondary);
}

input:is([type="checkbox" i], [type="radio" i])[role="toggle" i]:checked:before {
    left: 100%;
    transform: translate(-100%);
}

input:is([type="checkbox" i], [type="radio" i])[role="toggle" i][data-initializing] {
    --transition-speed: 0ms;
}

:is(button, input, input:is([type="checkbox" i], [type="radio" i])[role="toggle" i], select):disabled {
    background: #e7e7e7;
    color: #f7f7f7;
    cursor: default;
}

#page-header {
    align-items: center;
    background: var(--hn-plus-theme-primary);
    color: #ffffff;
    display: flex;
    flex: 0;
    justify-content: center;
    left: 0;
    padding: 1em 3em;
    position: sticky;
    top: 0;
}

.extension-name {
    position: relative;
}

.extension-name::after {
    all: inherit;
    content: "+";
    color: var(--hn-plus-theme-secondary);
    height: 100%;
    left: 0.5px;
    position: absolute;
    text-align: right;
    top: 0;
    width: 100%;
}

#page-content {
    flex: 1;
    overflow: auto;
    scrollbar-width: thin;
}

#page-content>section:not(.active) {
    display: none;
}

#page-content details {
    padding: 0 1em;
}

#page-content details summary {
    align-items: center;
    background: color-mix(in srgb, var(--hn-plus-theme-primary) 15%, #ffffff);
    cursor: pointer;
    display: flex;
    gap: 0.5em;
    justify-content: flex-start;
    margin: 0 -1em;
    padding: 0.5em;
    user-select: none;
    width: calc(100% + 2em);
}

#page-content details summary::before {
    content: 'keyboard_arrow_down';
    direction: ltr;
    font-family: 'Material Symbols Outlined';
    font-size: 2em;
    font-style: normal;
    font-variation-settings:
        'FILL' 1,
        'wght' 400,
        'GRAD' 0,
        'opsz' 24;
    font-weight: normal;
    letter-spacing: normal;
    line-height: 1;
    text-transform: none;
    white-space: nowrap;
    word-wrap: normal;
    -webkit-font-feature-settings: 'liga';
    font-feature-settings: 'liga';
    -webkit-font-smoothing: antialiased;
}

#page-content details summary~*+ :not(dialog) {
    margin-top: 1em;
}

#page-content details[open] {
    padding: 0 1em 1em;
}

#page-content details[open] summary {
    margin-bottom: 1em;
}

#page-content details[open] summary::before {
    content: 'keyboard_arrow_up';
}

#page-content .settings-group {
    display: flex;
    flex-direction: column;
    gap: 1em;
    padding-left: 1em;
}

#page-content .settings-group>h3 {
    border-bottom: thin solid var(--border-color);
    margin-left: -1em;
    padding: 0.5em 0;
    width: calc(100% + 1em);
}

#page-content .input-row {
    align-items: center;
    display: grid;
    gap: 1em;
    grid-template-columns: 12em 1fr;
    justify-content: flex-start;
}

#page-content .input-row input:is([type="checkbox" i], [type="radio" i])[role="toggle" i] {
    justify-self: flex-start;
    width: auto;
}

#page-content .input-row:has(.save-duration) {
    align-items: flex-start;
}

#page-content .input-row:has(.save-duration)>strong {
    margin-bottom: 0.667em;
    margin-top: 0.667em;
}

#page-content .save-duration {
    display: flex;
    gap: 0.5em 0;
    flex-wrap: wrap;
}

#page-content .save-duration select[name$=".mode" i] {
    flex: 0 0 100%;
}

#page-content .save-duration input[name$=".duration" i] {
    border-bottom-right-radius: unset;
    border-right: none;
    border-top-right-radius: unset;
    display: none;
    outline: none;
    text-align: right;
    width: 63%;
}

#page-content .save-duration select[name$=".displayUnits" i] {
    background: color-mix(in hsl, var(--border-color) 33%, #ffffff);
    border-bottom-left-radius: unset;
    border-left: none;
    border-top-left-radius: unset;
    display: none;
    font-size: 0.9em;
    outline: none;
    width: 37%;
}

#page-content .save-duration> :not(:first-child) {
    display: none;
}

#page-content .save-duration select[name$=".mode" i]:has(option[value="1" i]:checked) ~ :is(input[name$=".duration" i], select[name$=".displayUnits" i]) {
    display: inline-flex;
}

#page-content .actions {
    padding: 0.5em 0;
    text-align: right;
}

#page-footer {
    background: var(--hn-plus-theme-primary);
    bottom: 0;
    color: #ffffff;
    left: 0;
    position: sticky;
}

#page-footer nav {
    align-items: center;
    display: grid;
    gap: 1em;
    grid-template-columns: repeat(auto-fit, minmax(0, 1fr));
    justify-content: space-evenly;
    padding: 0.5em 1em;
    text-align: center;
}

#page-footer nav a {
    align-items: center;
    color: inherit;
    display: inline-flex;
    flex-direction: column;
    gap: 0.5em;
    opacity: 0.75;
    padding: 0.5em;
    text-decoration: none;
}

#page-footer nav a:is(:hover, :focus, :active, .active) {
    opacity: 1;
}

#page-footer nav a.active {
    color: var(--hn-plus-theme-secondary);
}

#page-footer nav a span:not(.material-symbols-outlined) {
    font-size: 0.9em;
}

:modal {
    border: none;
    border-radius: 5px;
    box-shadow: 0 0 1.5em #000000;
    margin: auto;
    max-height: 90vh;
    max-width: 90vw;
    outline: none;
    overflow: auto;
    padding: 1em;
    text-overflow: wrap;
}

:modal::backdrop {
    background: rgba(255, 255, 255, 0.75);
}

:modal> :not(:first-child),
:modal ul>li+li {
    margin-top: 1em;
}

:modal ul,
:modal ul li {
    margin-left: 1em;
    padding-left: 1em;
}